#!/bin/bash
# info: authenticate ddns key
# options: USER ID KEY [FORMAT]
#
# The function for authenticating a DDNS key for a DNS record.


#----------------------------------------------------------#
#                    Variable&Function                     #
#----------------------------------------------------------#

# Argument definition
user=$1
id=$2
key=$3
format=${4-shell}
valid='was not'

# Includes
source $VESTA/func/main.sh
source $VESTA/conf/vesta.conf

# JSON list function
json_auth() {
    IFS=$'\n'
    i=1
    objects=$(grep "ID='$id'" $USER_DATA/ddns.conf | grep "KEY='$key'" |wc -l)
    echo "{"
    while read str; do
        eval $str
        echo -n '    "'$ID'": {
        "DOMAIN": "'$DOMAIN'",
        "RECORD_ID": "'$RECORD_ID'",
        "VALID": true
    }'
        if [ "$i" -lt "$objects" ]; then
            echo ','
        else
            echo
        fi
        ((i++))
    done < <(grep "ID='$id'" $USER_DATA/ddns.conf | grep "KEY='$key'")
    echo '}'
}

# SHELL authentication output function
shell_auth() {
    IFS=$'\n'
    echo "ID   DOMAIN   RECORD_ID   VALID"
    echo "--   ------   ---------   -----"
    while read str; do
        eval $str
        echo "$ID $DOMAIN $RECORD_ID true"
    done < <(grep "ID='$id'" $USER_DATA/ddns.conf | grep "KEY='$key'")
}

# PLAIN authentication output function
plain_auth() {
    IFS=$'\n'
    while read str; do
        eval $str
        echo -e "$ID\t$DOMAIN\t$RECORD_ID\ttrue"
    done < <(grep "ID='$id'" $USER_DATA/ddns.conf | grep "KEY='$key'")
}

# CSV authentication output function
csv_auth() {
    IFS=$'\n'
    echo "ID,DOMAIN,RECORD_ID,VALID"
    while read str; do
        eval $str
        echo "$ID,$DOMAIN,$RECORD_ID,true"
    done < <(grep "ID='$id'" $USER_DATA/ddns.conf | grep "KEY='$key'")
}


#----------------------------------------------------------#
#                    Verifications                         #
#----------------------------------------------------------#

check_args '3' "$#" 'USER ID KEY [FORMAT]'
# Intentionally do not validate any of this for security purposes.


#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

# Authenticate DDNS key
result=$(grep "ID='$id'" $USER_DATA/ddns.conf | grep "KEY='$key'" | wc -l)
if [ "$result" == "1" ]; then
    valid="was";
fi

# Listing data
case $format in
    json)   json_auth ;;
    plain)  plain_auth ;;
    csv)    csv_auth ;;
    shell)  shell_auth |column -t ;;
esac

#----------------------------------------------------------#
#                       Vesta                              #
#----------------------------------------------------------#

#Logging
log_history "attempted authentication for ddns $id $valid successful "
log_event "$OK" "$ARGUMENTS"

exit
